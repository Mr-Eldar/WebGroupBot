from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton,
                           InlineKeyboardMarkup, InlineKeyboardButton)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

from app.database.requests import get_users, get_hw, get_task_status_for_user, get_users_with_rating, get_user_level

profile_kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìù –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è", callback_data="profile_hw"),
            InlineKeyboardButton(text="üèÜ –†–µ–π—Ç–∏–Ω–≥", callback_data="profile_rating")
        ],
        [
            InlineKeyboardButton(text="üíº –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", url='https://t.me/+yjWa_F_HzQgzNTIy'),
            InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="profile_settings")
        ]
    ])

profile_settings_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –§–ò", callback_data="settings_edit_fi")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data="back_to_profile")]
    ])

profile_settings_edit_user_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–µ—Ç ‚ùå', callback_data='no'), InlineKeyboardButton(text='–î–∞ ‚úÖ', callback_data='yes')],
])

materials_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üíº –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", url='https://t.me/+yjWa_F_HzQgzNTIy')]
])

admin_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –î–ó üìù', callback_data='add_hw')],
    [InlineKeyboardButton(text='–£–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ üë•', callback_data='users_managements')],
    [InlineKeyboardButton(text='–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ üìä', callback_data='see_statistic')]
])

skip = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚è≠Ô∏è', callback_data='skip')]
])

set_points = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='5'), KeyboardButton(text='10')],
    [KeyboardButton(text='15'), KeyboardButton(text='20')],
    [KeyboardButton(text='25'), KeyboardButton(text='30')],
], resize_keyboard=True, one_time_keyboard=True)

finish_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É")]
], resize_keyboard=True)


async def get_rating_users():
    keyboard = InlineKeyboardBuilder()
    users = await get_users_with_rating()

    for user in users:
        level_info = await get_user_level(user.points)
        rating = getattr(user, '_rating', 0)

        if rating == 1:
            emoji = "ü•á"
        elif rating == 2:
            emoji = "ü•à"
        elif rating == 3:
            emoji = "ü•â"
        else:
            emoji = "üîπ"

        button_text = f"{emoji}{rating}. {user.su} | {level_info['name']} | {user.points} –±–∞–ª–ª–æ–≤."

        keyboard.add(InlineKeyboardButton(
            text=button_text,
            callback_data=f'rating_{user.id}'
        ))

    keyboard.add(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å",
        callback_data="back_to_profile"
    ))

    return keyboard.adjust(1).as_markup()


async def get_homeworks():
    keyboard = InlineKeyboardBuilder()
    tasks = await get_hw()

    for task in tasks:
        keyboard.add(InlineKeyboardButton(text=f'{task.task_name} | {task.points}', callback_data=f'task_{task.id}'))
    keyboard.add(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data="back_to_profile"))

    return keyboard.adjust(1).as_markup()


async def hw_kb(task, tg_id):
    task_status = await get_task_status_for_user(tg_id, task.id)

    if task_status == 'in progress ‚åõÔ∏è':
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ ‚åõÔ∏è', callback_data='in_progress')],
            [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data="back_to_profile")]
        ])
    elif task_status == 'approved ‚úÖ':
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ ‚úÖ', callback_data='approved')],
            [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data="back_to_profile")]
        ])
    elif task_status == 'declined ‚ùå':
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω–æ ‚ùå', callback_data='declined')],
            [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data="back_to_profile")]
        ])
    else:
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='–°–¥–∞—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É üìù', callback_data=f'send_hw_{task.id}')],
            [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data="back_to_profile")]
        ])


async def get_users_kb():
    users = await get_users()
    keyboard = InlineKeyboardBuilder()

    for user in users:
        keyboard.add(InlineKeyboardButton(text=f'{user.su}', callback_data=f'check_user_hw_{user.tg_id}'))
    return keyboard.adjust(2).as_markup()
